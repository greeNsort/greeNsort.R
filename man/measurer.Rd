% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measure.R
\name{measurer}
\alias{measurer}
\title{Measuring replications of one algorithm in one data setting}
\usage{
measurer(pass, file, algo, data, size, repl = 2, ...)
}
\arguments{
\item{pass}{the root password for \code{sudo}}

\item{file}{the name of the file into which \code{perf} is redirected}

\item{algo}{label of the algorithm as in \code{\link{algodb}$label}}

\item{data}{name of the test data pattern as in \code{\link{testdb}$name}}

\item{size}{number of test elements to be sorted}

\item{repl}{number of replications}

\item{\dots}{further arguments passed to the algorithm}
}
\value{
a list with two components
\item{sleep}{the sleep measurement: a dataframe with columns returned by \code{\link{measures}} and \code{repl} rows}
\item{task}{the algorithm mesasurement: a dataframe with columns returned by \code{\link{measures}} and \code{repl} rows}
}
\description{
For each replication \code{r in 0:repl} test \code{data} sets is created with \code{set.seed(r)}.
Data number 0 is used to determine the expected runtime of \code{algo}.
For each of the remaining \code{1:repl} data sets \code{\link{measure1}} is called twice,
once measuring a sleep command of the expected duration
and once measuring algorithm \code{algo} on the data.
}
\note{
The recommended correction for background
If the algorithm is size-varying the data is coerced to integer and then to character.
Note that the size-varing algorithms return their pure sorting time
but have relevant overhead for pre- and post-processing the strings
which is included in this measurement,
to correct for this bias measure also \code{\link{UVWoverhead}}.
}
\examples{
\donttest{
.sudopw <- rstudioapi::askForPassword("sudopw")
m <- measurer(.sudopw, ".perf.txt", "Frog1", "permut", 2^23, 5)
rm(.sudopw)
}
}
