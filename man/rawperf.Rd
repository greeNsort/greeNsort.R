% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perf.R
\name{rawperf}
\alias{rawperf}
\title{Extract raw energy measurement}
\usage{
rawperf(x)
}
\arguments{
\item{x}{see \code{\link{perf}}}
}
\value{
a \code{\link{retperf}}
}
\description{
The energy values stem from RAPL counters
of the powercap kernel module. RAPL delivers
a `dram` measure, a `core` measure,
and a `package` (socket) measure which contains
the `core` measure. `base` is calculated as
`package - core`.
}
\details{
Note that the RAPL counters are incremented at certain points
in time, hence the measured counter difference can be zero.

Note that the RAPL counters can overflow for long-running tasks.
Our code detects and corrects overflow, for a single overflow
this still leads to correct results, for multiple overflows not.

Note that the kernel updates the counters in different points
in time, hence for short measurements `base` can become negative.
You can handle that either statistically aggregating over many
measurements or by measuring larger tasks.
}
\examples{
rawperf(Insertionsort(runif(1000)))
# statistical median and mean are not negative
summary(do.call("rbind", lapply(1:1000, function(i){
  rawperf(Insertionsort(runif(100)))
}))[,-(1:3)])
# bigger task has no negative values
summary(do.call("rbind", lapply(1:100, function(i){
  rawperf(Insertionsort(runif(10000)))
}))[,-(1:3)])

}
\seealso{
\code{\link{rawperf}},  \code{\link{bacperf}}, \code{\link{difperf}}, \code{\link{adjperf}}, \code{\link{amdperf}}, \code{\link{perf}}
}
